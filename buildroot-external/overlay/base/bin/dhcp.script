#!/bin/sh

RESOLV_CONF=/var/etc/resolv.conf
CONFIGURL=/var/configurl

action=${1}
nfsroot=false

if grep -q nfsroot /proc/cmdline ; then
    if [[ ${interface} == "eth0" ]]; then
      nfsroot=true
    fi
fi

handle_deconfig() {
  if [[ ${nfsroot} == true ]]; then
      exit 0
  fi

  # Disable Auto-IP daemon
  if [ -x /usr/sbin/avahi-autoipd ]; then
    /usr/sbin/avahi-autoipd -k ${interface}
  fi

  /sbin/ip -4 addr flush dev ${interface}
  /sbin/ip link set dev ${interface} up
}

handle_renew() {

  # bring interface up if not nfs rooted
  if [[ ${nfsroot} == false ]]; then
    # Disable Auto-IP daemon
    if [ -x /usr/sbin/avahi-autoipd ]; then
      /usr/sbin/avahi-autoipd -k ${interface}
    fi
    
    # make sure we can deal with DHCP servers not providing broadcast or subnet
    [[ -n "${broadcast}" ]] && BROADCAST="${broadcast}" || BROADCAST="+"
    /sbin/ip addr add dev ${interface} local ${ip}/${mask} broadcast ${BROADCAST}

    # update the info in /etc/config/netconfig
    eq3configcmd netconfigcmd -i ${ip} -n ${subnet} -g ${router}
    j=1
    for i in ${dns}; do
      eq3configcmd netconfigcmd -d${j} ${i}
      j=$((${j} + 1))
    done
  fi

  # add default routes
  if [[ -n "${router}" ]]; then
    # delete all default routers
    while /sbin/ip route del default dev ${interface} 2>/dev/null; do
      :
    done

    metric=10
    for i in ${router}; do
      /sbin/ip route add default via ${i} dev ${interface} metric ${metric}
      metric=$((${metric} + 1))
    done
  fi

  # query for NTP server information
  [[ -n "${ntpsrv}" ]] && echo "NTPSERVERS_DHCP='${ntpsrv}'" >/var/etc/ntp-dhcp.conf

  # check for boot file
  [[ -n "${boot_file}" ]] && echo ${boot_file} >${CONFIGURL}

  # take care of resolv.conf
  rm -f ${RESOLV_CONF} 2>/dev/null
  [[ -n "$domain" ]] && echo domain ${domain} >>${RESOLV_CONF}
  [[ -n "$search" ]] && echo search ${search} >>${RESOLV_CONF}
  for i in ${dns}; do
    echo nameserver ${i} >>${RESOLV_CONF}
  done

  # flag as having a proper ip
  touch /var/status/hasIP

  # check carrier
  if [[ $(cat /sys/class/net/${interface}/carrier) -eq 1 ]]; then
    touch /var/status/hasLink
  fi

  # check internet connection
  /usr/bin/wget -q --spider http://google.com/
  if [[ $? -eq 0 ]]; then
    touch /var/status/hasInternet
  elif ping -q -W 5 -c 1 google.com >/dev/null 2>/dev/null; then
    touch /var/status/hasInternet
  fi
}

handle_bound() {
    handle_renew
}

handle_leasefail() {
  # No DHCP IP received
  # Start Auto-IP daemon
  if [ -x /usr/sbin/avahi-autoipd ]; then
    /usr/sbin/avahi-autoipd -wD ${interface} --no-chroot
  fi
}

handle_nak() {
    handle_leasefail
}

case $action in
'deconfig')
        handle_deconfig ;;
'bound')
        handle_bound ;;
'renew')
        handle_renew ;;
'leasefail')
        handle_leasefail ;;
'nak')
        handle_nak ;;
esac

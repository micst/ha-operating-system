#!/bin/sh
#
# startup script to identify the host hardware
#

identify_host() {

  # default/fallback values
  HM_HOST=""
  HM_MODE="NORMAL"
  HM_LED_GREEN=""
  HM_LED_GREEN_MODE1="$(lsblk -r -n -o pkname,partuuid,label,mountpoint | sed -n 's/mmc.*\([[:digit:]]\) deedbeef-02 rootfs \/$/mmc\1/p')"
  HM_LED_GREEN_MODE2="heartbeat"
  HM_LED_RED=""
  HM_LED_RED_MODE1="timer"
  HM_LED_RED_MODE2=${HM_LED_GREEN_MODE1}
  HM_LED_YELLOW=""
  HM_LED_YELLOW_MODE1="none"
  HM_LED_YELLOW_MODE2="none"

  # identify the RaspberryPi version used
  # http://elinux.org/RPi_HardwareHistory
  # https://github.com/MilhouseVH/bcmstat/blob/master/bcmstat.sh#L67
  # https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md
  hostid=$(cat /proc/cpuinfo | grep 'Revision' | awk '{print $3}')
  case "${hostid}" in
    *d?311?)                       HM_HOST="rpi4b8g"    ;; # Raspberry Pi 4 Model B/8GB
    *c?311?)                       HM_HOST="rpi4b4g"    ;; # Raspberry Pi 4 Model B/4GB
    *b?311?)                       HM_HOST="rpi4b2g"    ;; # Raspberry Pi 4 Model B/2GB
    *a?311?)                       HM_HOST="rpi4b1g"    ;; # Raspberry Pi 4 Model B/1GB
    *a?210?)                       HM_HOST="rpi3cmp"    ;; # Raspberry Pi Compute Module 3+
    *a?20d?)                       HM_HOST="rpi3p"      ;; # Raspberry Pi 3 Model B+
    *a?208?)                       HM_HOST="rpi3"       ;; # Raspberry Pi 3 Model B
    *9?20e?)                       HM_HOST="rpi3ap"     ;; # Raspberry Pi 3 Model A+
    *a?20a?)                       HM_HOST="rpi3cm"     ;; # Raspberry Pi Compute Module 3
    *a?104?|*a?204?)               HM_HOST="rpi2"       ;; # Raspberry Pi 2 Model B
    *9?00c?)                       HM_HOST="rpi0w"      ;; # Raspberry Pi Zero W
    *9?009?)                       HM_HOST="rpi0"       ;; # Raspberry Pi Zero
    *9?006?|*0011|*0014)           HM_HOST="rpi1cm"     ;; # Raspberry Pi Compute Module 1
    *9?003?|*0010|*0013)           HM_HOST="rpi1bp"     ;; # Raspberry Pi B+/512MB
    *9?001?|*9?002?|*0015)         HM_HOST="rpi1ap512"  ;; # Raspberry Pi A+/512MB
    *0012)                         HM_HOST="rpi1ap256"  ;; # Raspberry Pi A+/256MB
    *000d|*000e|*000f)             HM_HOST="rpi1b512"   ;; # Raspberry Pi B/512MB
    *0002|*0003|*0004|*0005|*0006) HM_HOST="rpi1b256"   ;; # Raspberry Pi B/256MB
    *0007|*0008|*0009)             HM_HOST="rpi1a"      ;; # Raspberry Pi A/256MB

    # No RaspberryPi identified, try other boards
    *)
      hardware=$(cat /proc/cpuinfo | grep 'Hardware' | awk '{print $3}')
      case "${hardware}" in
        # ASUS Tinkerboard
        Rockchip)
          HM_HOST="tinkerboard"
        ;;
      esac
    ;;
  esac

  # find out if we are in a virtual environment so that
  # we can identify the ova platform
  if [[ -z "${HM_HOST}" ]]; then
    hypervisor=$(/usr/bin/lscpu | grep 'Hypervisor vendor:' | awk '{print $3}')
    if [[ -n "${hypervisor}" ]]; then
      HM_HOST="ova-${hypervisor}"
    fi
  fi

  # find out via dmidecode (if it exists) the product name
  # and extract the host type from that
  if [[ -z "${HM_HOST}" ]] && [[ -e /usr/sbin/dmidecode ]]; then
    product_name=$(/usr/sbin/dmidecode -s baseboard-manufacturer)
    case "${product_name}" in
      *Intel*) HM_HOST="nuc";; # Intel NUC
    esac
  fi

  # if HOST is still empty we fall back to RaspberryPi3
  if [[ -z "${HM_HOST}" ]]; then
    HM_HOST="rpi3"
    echo "couldn't identify hardware platform (${hostid}). Using RaspberryPi3 as fallback"
  fi

  # depending on the host hardware we have to define different
  # HM settings
  case "${HM_HOST}" in

    # RaspberryPi
    rpi*)
      HM_LED_GREEN="/sys/class/leds/led0"
      HM_LED_RED="/sys/class/leds/led1"
      HM_LED_YELLOW=""

      # if we are running on a raspberrypi we
      # disable the HDMI port in case no cable is
      # connected. This is to save power, but also
      # to reduce potential interferences with the
      # GPIO-based RF modules
      hdmi_state=$(/usr/bin/tvservice -s | cut -d' ' -f2)

      # if the least significant bit is set the
      # HDMI cable seems to be unplugged or if
      # no HDMI display is listed using tvservice
      if [[ $(((${hdmi_state} & 0x01) == 1)) -eq 1 ]] || ! /usr/bin/tvservice -l | grep -q "type HDMI"; then
        /usr/bin/tvservice --off >/dev/null
        /usr/bin/vcgencmd display_power 0 >/dev/null
      fi
    ;;

    # ASUS Tinkerboard
    tinkerboard*)
      HM_LED_GREEN="/sys/class/leds/act-led"
      HM_LED_RED="/sys/class/leds/pwr-led"
      HM_LED_YELLOW="/sys/class/leds/heartbeat-led"
    ;;

    # Open Virtual Appliance (ova)
    ova*)
      # fine
    ;;

    # Intel NUC hardware (intelnuc)
    nuc*)
      # fine
    ;;

    *)
      echo "ERROR: couldn't identify host hardware: ${hostid}"
    ;;

  esac

  # make sure the LEDs are actually setup correctly
  if [[ -f "${HM_LED_GREEN}/trigger" ]]; then
    echo ${HM_LED_GREEN_MODE1} >${HM_LED_GREEN}/trigger
  fi
  if [[ -f "${HM_LED_RED}/trigger" ]]; then
    echo ${HM_LED_RED_MODE1} >${HM_LED_RED}/trigger
  fi
  if [[ -f "${HM_LED_YELLOW}/trigger" ]]; then
    echo ${HM_LED_YELLOW_MODE1} >${HM_LED_YELLOW}/trigger
  fi
}

start() {
  echo -n "Identifying onboard hardware: "

  # source all data from /var/hm_mode
  [[ -r /var/hm_mode ]] && . /var/hm_mode

  identify_host

  # save all HM_ env variables
  set | grep '^HM_' >/var/hm_mode

  if [[ -n "${HM_HOST}" ]]; then
    echo "${HM_HOST}, OK"
  else
    echo "ERROR"
  fi
}

restart() {
  start
}

case "$1" in
  start)
    start
  ;;
  stop)
    # nothing
  ;;
  restart|reload)
    restart
  ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac

exit $?

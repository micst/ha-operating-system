--- occu/WebUI/www/config/ic_deviceFirmwareOverview.cgi.orig
+++ occu/WebUI/www/config/ic_deviceFirmwareOverview.cgi
@@ -296,6 +296,9 @@
 
       puts "resetFilter = function() {"
         puts "jQuery(\"\[name='invisible'\]\").show().attr(\"name\", \"\");"
+        puts "jQuery(\"input.FilterText\").val(\"\");"
+        puts "jQuery(\".FilterCaption\").css(\"color\", \"\");"
+        puts "localStorage.removeItem(\"hmFwPageFilter\");"
       puts "};"
 
       puts "setFilter = function(filter) {"
@@ -304,6 +307,14 @@
         # searchFilter = NAME, TYPE or ADDRESS
         puts "var searchFilter = filter.split(\"_\")\[1\];"
         puts "var searchText = jQuery(\"#searchText_\" + searchFilter).val().toLowerCase();"
+        
+        puts "var storedFilters = {};"
+        puts "try {"
+        puts "  storedFilters = JSON.parse(localStorage.getItem(\"hmFwPageFilter\")) || {};"
+        puts "} catch(e) {}"
+        puts "storedFilters\[searchFilter\] = searchText;"
+        puts "localStorage.setItem(\"hmFwPageFilter\", JSON.stringify(storedFilters));"
+        puts "jQuery(\"#\" + filter).parent().find(\".FilterCaption\").css(\"color\", searchText ? \"red\" : \"\");"
 
         # filterElem = NAME, TYPE or ADDRESS
         puts "arElements = jQuery(\"\[name='\"+searchFilter+\"'\]\");"
@@ -319,6 +330,14 @@
 
       puts "};"
 
+      puts "(function() { try {"
+      puts "  var storedFilters = JSON.parse(localStorage.getItem(\"hmFwPageFilter\")) || {};"
+      puts "  Object.keys(storedFilters).forEach(function(searchFilter) {"
+      puts "    jQuery(\"#searchText_\" + searchFilter).val(storedFilters\[searchFilter\]);"
+      puts "    setFilter(\"filter_\" + searchFilter);"
+      puts "  });"
+      puts "} catch(e) {} })()"
+
       set footerHtml  ""
       append footerHtml "<table style='backgroud-color:white' boder='0' cellspacing='8'>"
         append footerHtml "<tr>"
--- occu/WebUI/www/webui/style.css.orig
+++ occu/WebUI/www/webui/style.css
@@ -785,6 +785,10 @@
   z-index:501;
 }
 
+.Filter_Active .FilterCaption {
+  color: red;
+}
+
 .ControlBtnOff {
   background-color: $_(clickable);
   color: $_(textColorA); /* white */
--- occu/WebUI/www/webui/webui.js.orig
+++ occu/WebUI/www/webui/webui.js
@@ -7164,10 +7164,10 @@
   
   
   var m_name     = name;
-  var m_value    = "";
   var m_callback = callback;
   
   var m_id     = name.replace(/\,/g, "_");
+  var m_value    = localStorage.getItem(m_id) || "";
   var m_textId = m_id + "Text";
 
   var isSet = function()
@@ -7272,6 +7272,7 @@
       }
     }
     if ($(m_id))     { $(m_id).hide(); }
+    localStorage.setItem(m_id, $(m_textId).value);
     if (m_callback)  { m_callback(); }
   };
   
@@ -7290,6 +7291,7 @@
   this.reset = function()
   {
     m_value = "";
+    localStorage.removeItem(m_id);
     this.close();
   };
 
@@ -7312,7 +7314,6 @@
   /*# Initialisierung #*/
   /*###################*/
   
-  this.reset();
   
 };
 
@@ -7336,7 +7337,28 @@
     this.callback = callback;
     this.id       = name.replace(/\./g, "_");
     this.formId   = this.id + "Form";
-    this.reset();
+    var self = this;
+    function fltrHandler() {
+      self.restoreFilters();
+      eQ3.HomeMatic.Event.unsubscribe('DeviceListPageLoaded', fltrHandler);
+    }
+    eQ3.HomeMatic.Event.subscribe('DeviceListPageLoaded', fltrHandler);
+  },
+
+  restoreFilters: function() {
+    var filterValues = localStorage.getItem(this.id);
+    if(filterValues) {
+      try {
+        filterValues = JSON.parse(filterValues);
+        var values = $(this.formId).values;
+        for (var i = 0, len = values.length; i < len; i++) {
+         if(filterValues.indexOf(values[i].value) !== -1) {
+            values[i].checked = true;
+          }
+        }
+        this.set();
+      } catch(e) { console.log(e); }
+    }
   },
 
   /**
@@ -7447,16 +7469,20 @@
     if ($(this.formId))
     {
       var values = $(this.formId).values;
+      var filterValues = [];
 
       for (var i = 0, len = values.length; i < len; i++)
       {
         this.select(values[i].value, values[i].checked);
+        if(values[i].checked) filterValues.push(values[i].value);
       }
 
       if ($(this.id))    {
         $(this.id).hide();
         try {jQuery("#"+ this.id).draggable("destroy");} catch (e) {}
       }
+      // JSON.stringify encodes an array twice???
+      localStorage.setItem(this.id, JSON.parse(JSON.stringify(filterValues)));
       if (this.callback) { this.callback(); }
     }
   },
@@ -7492,7 +7518,8 @@
     {
       this.list[i]._selected = false;
     }
-    
+
+    localStorage.removeItem(this.id);
     this.close();
   }
   
@@ -20914,6 +20941,7 @@
     jQuery("#DeviceListPage_FuncFilter").draggable();
 
     DeviceList.updateDeviceStatus();
+    eQ3.HomeMatic.Event.fire({type: 'DeviceListPageLoaded'});
   },
   
   onRemoveDevice: function(whatEver)
@@ -27244,11 +27272,31 @@
     if (file.substring(0, UI_PATH.length) == UI_PATH)
     {
       //method: 'get' ist für die ELV-CGIs notwendig.
-      opts = {evalScripts: true, method: 'get', onComplete:function(){iseRefr(true);bUpdateContentRunning=false;}};
+      opts = {
+        evalScripts: true,
+        method: 'get',
+        onComplete:function(){
+          iseRefr(true);
+          bUpdateContentRunning=false;
+          setTimeout(function() {
+            eQ3.HomeMatic.Event.fire({type:'ContentLoaded'});
+          }, 100);
+        }
+      };
     }
     else
     {
-      opts = {postBody: ReGa.encode(pb),evalScripts: true, onComplete:function(){iseRefr(true);bUpdateContentRunning=false;}};
+      opts = {
+        postBody: ReGa.encode(pb),
+        evalScripts: true,
+        onComplete:function(){
+          iseRefr(true);
+          bUpdateContentRunning=false;
+          setTimeout(function() {
+            eQ3.HomeMatic.Event.fire({type:'ContentLoaded'});
+          }, 100);
+        }
+      };
     }
     /* ELV --> */
     
@@ -30583,6 +30631,26 @@
     this.fltObjType = 0;
     if (fltObjType)
       this.fltObjType = fltObjType;
+
+    var self = this;
+    function fltrHandler() {
+      self.restoreFilters();
+      eQ3.HomeMatic.Event.unsubscribe('ContentLoaded', fltrHandler);
+    }
+    eQ3.HomeMatic.Event.subscribe('ContentLoaded', fltrHandler);
+  },
+
+  restoreFilters: function() {
+    try {
+      var iseSFilters = JSON.parse(localStorage.getItem('iseSFilters_' + this.pageID));
+      Object.keys(iseSFilters).forEach(function(id) {
+        var val = iseSFilters[id];
+        $(id).value = val;
+        $(id).nextSiblings()[0].click();
+      });
+    } catch(e) {
+      console.error(e);
+    }
   },
   
 
@@ -30947,6 +31015,15 @@
     this.bTypeNumber = false;
     this.bTypeAlarm = false;
     this.bTypeString = false;
+    localStorage.removeItem('iseSFilters_' + this.pageID);
+    var filterButtons = document.querySelectorAll('.FilterSetButton[onclick*=' + this.pageID + ']');
+    filterButtons.forEach(function(el) {
+      try {
+        el.parentElement.parentElement.querySelector('.FilterBtn').style.color = '';
+      } catch(e) {
+        console.error(e);
+      }
+    });
     conInfo("Alle Filter wurden zurückgesetzt.");
   }
 };
@@ -31055,6 +31132,12 @@
 {
   //conInfo("iseFilter: setSFilter "+fId+" to "+$(ctrlId).value);
   fltObj.addStringFilter(fId, $(ctrlId).value);
+  try {
+    var iseFilters = JSON.parse(localStorage.getItem('iseSFilters_' + fltObj.pageID)) || {};
+    iseFilters[ctrlId] = $(ctrlId).value;
+    localStorage.setItem('iseSFilters_' + fltObj.pageID, JSON.stringify(iseFilters));
+    $(ctrlId).parentElement.previous().style.color = $(ctrlId).value ? 'red' : 'black';
+  } catch(e) { console.error(e); }
 };
 
 // Integer-Filter (Modus, Iface)
